# Multi-stage build for VATSIM Tower Monitor Web Interface
FROM python:3.11-slim AS builder

# Set working directory
WORKDIR /app

# Install system dependencies needed for building
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY web/requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Production stage
FROM python:3.11-slim

# Create non-root user for security
RUN groupadd -r vatsim && useradd -r -g vatsim vatsim

# Install curl for health checks
RUN apt-get update && apt-get install -y \
    curl \
    gosu \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/vatsim/.local

# Make sure scripts in .local are usable
ENV PATH=/home/vatsim/.local/bin:$PATH

# Copy application files
COPY web/backend/ backend/
COPY web/templates/ templates/
COPY web/*.py ./
COPY web/*.html ./
COPY web/*.css ./
COPY web/*.js ./
COPY web/robots.txt ./
COPY shared/ shared/
COPY config/ config/
COPY assets/ assets/
COPY scripts/ scripts/
COPY web/docker-entrypoint-web.sh .

# Make entrypoint script executable and create logs and database directories
RUN chmod +x docker-entrypoint-web.sh && \
    chmod +x scripts/migrate_database.sh && \
    chmod +x scripts/migrate_database.py && \
    chown vatsim:vatsim /app


# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV FLASK_ENV=production

# Expose port 8080
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/api/health || exit 1

# Set entrypoint and default command
ENTRYPOINT ["/app/docker-entrypoint-web.sh"]
CMD ["gunicorn", "--bind", "0.0.0.0:8080", "--workers", "2", "--timeout", "120", "--access-logfile", "-", "--error-logfile", "-", "backend.app:app"]