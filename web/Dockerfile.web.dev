# Development Dockerfile for VATSIM Tower Monitor Web Interface
# Based on production Dockerfile but optimized for development workflows

FROM python:3.11-slim

# Create non-root user for security (same as production)
RUN groupadd -r vatsim && useradd -r -g vatsim vatsim

# Install system dependencies (including dev tools)
RUN apt-get update && apt-get install -y \
    curl \
    gosu \
    gcc \
    git \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies as vatsim user
COPY web/requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy the user's pip packages to vatsim user home
RUN mkdir -p /home/vatsim && \
    cp -r /root/.local /home/vatsim/.local && \
    chown -R vatsim:vatsim /home/vatsim/.local

# Make sure scripts in .local are usable
ENV PATH=/home/vatsim/.local/bin:$PATH

# Copy application files (these will be overridden by volume mounts in development)
COPY web/backend/ backend/
COPY web/templates/ templates/
COPY web/*.py ./
COPY web/*.html ./
COPY web/*.css ./
COPY web/*.js ./
COPY web/robots.txt ./
COPY shared/ shared/
COPY config/ config/
COPY assets/ assets/
COPY scripts/ scripts/

# Copy development entrypoint script
COPY web/docker-entrypoint-web-dev.sh ./docker-entrypoint-web-dev.sh

# Make entrypoint script executable and ensure proper ownership
RUN chmod +x docker-entrypoint-web-dev.sh && \
    chmod +x scripts/migrate_database.sh && \
    chmod +x scripts/migrate_database.py && \
    chown -R vatsim:vatsim /app

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app
ENV FLASK_ENV=development

# Expose port 8080
EXPOSE 8080

# Set entrypoint for development
ENTRYPOINT ["/app/docker-entrypoint-web-dev.sh"]

# Default command for development - can be overridden
CMD ["python", "run_app.py"]